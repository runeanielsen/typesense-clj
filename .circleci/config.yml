version: 2.1

executors:
  clojure-tools-deps:
    docker:
    - image: clojure:openjdk-11-tools-deps-1.10.3.1087-buster
      auth:
        username: $DOCKER_LOGIN
        password: $DOCKER_ACCESSTOKEN
  clojure-tools-deps-tests:
    docker:
    - image: clojure:openjdk-11-tools-deps-1.10.3.1087-buster
      auth:
        username: $DOCKER_LOGIN
        password: $DOCKER_ACCESSTOKEN
    - image: typesense/typesense:0.23.1 # For integration testing
      auth:
        username: $DOCKER_LOGIN
        password: $DOCKER_ACCESSTOKEN
      command: [--data-dir=/tmp, --api-key=key]

jobs:
  build:
    executor: clojure-tools-deps
    steps:
      - checkout
      - run:
          name: Run build
          command: clojure -T:build build

  test:
    executor: clojure-tools-deps-tests
    steps:
      - checkout
      - run:
          name: install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for Typesense
          command: dockerize -wait tcp://localhost:8108 -timeout 1m
      - run:
          name: Run test
          command: clojure -T:build tests

  deploy-clojars:
    executor: clojure-tools-deps
    steps:
      - checkout
      - run:
          name: Deploy to Clojars
          command: clojure -T:build deploy

workflows:
  primary:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - deploy-clojars:
          context: clojars
          requires:
            - build
            - test
          filters:
            tags:
              only: /^[0-9].*/
            branches:
              ignore: /.*/
